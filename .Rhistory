geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal()+
theme(legend.position="none")+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=8, hjust=0.5, face="italic", color="grey"))+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="")+
transition_states(Date, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out')+
NULL
df_cum_ranked <-  df_cum %>% filter(country_region %in% countries_of_europe) %>%
group_by(Date)%>%
mutate(rank = rank(-cumulative_cases),
Value_rel = cumulative_cases/cumulative_cases[rank==1],
Value_lbl = paste0(" ",cumulative_cases)) %>%
group_by(country_region) %>%
filter(rank <= 10)
ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal()+
theme(legend.position="none")+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=8, hjust=0.5, face="italic", color="grey"))+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="")+
transition_states(Date, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out')+
NULL
countries_of_europe <- read.csv("countries_of_europe.csv", header = FALSE) %>% unlist(use.names = FALSE)
df_cum_ranked <-  df_cum %>% filter(country_region %in% countries_of_europe) %>%
group_by(Date)%>%
mutate(rank = rank(-cumulative_cases),
Value_rel = cumulative_cases/cumulative_cases[rank==1],
Value_lbl = paste0(" ",cumulative_cases)) %>%
group_by(country_region) %>%
filter(rank <= 10)
df_cum_ranked <-  df_cum %>%
group_by(Date)%>%
mutate(rank = rank(-cumulative_cases),
Value_rel = cumulative_cases/cumulative_cases[rank==1],
Value_lbl = paste0(" ",cumulative_cases)) %>%
group_by(country_region) %>%
filter(rank <= 10)
df_cum <- df_cum %>% filter(country_region %in% countries_of_europe)
df_cum_ranked <-  df_cum %>%
group_by(Date)%>%
mutate(rank = rank(-cumulative_cases),
Value_rel = cumulative_cases/cumulative_cases[rank==1],
Value_lbl = paste0(" ",cumulative_cases)) %>%
group_by(country_region) %>%
filter(rank <= 10)
View(df_cum)
View(df_cum)
df_cum_ranked <-  df_cum %>%
group_by(Date)%>%
mutate(rank = rank(-cumulative_cases)
)
View(df_cum_ranked)
View(df_cum_ranked)
df_cum_ranked <-  df_cum %>% filter(Date >=mdy("02-30-2020"))
df_cum_ranked <-  df_cum %>% filter(Date >= "02-30-2020")
df_cum %>% filter(Date > "2020-03-01")
df_cum_ranked <-  df_cum %>% filter(Date > "2020-03-01")
df_cum_ranked <-  df_cum %>% filter(Date > "2020-03-01") %>%
group_by(Date)%>%
mutate(rank = rank(-cumulative_cases),
Value_rel = cumulative_cases/cumulative_cases[rank==1],
Value_lbl = paste0(" ",cumulative_cases)) %>%
group_by(country_region) %>%
filter(rank <= 10)
ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal()+
theme(legend.position="none")+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=8, hjust=0.5, face="italic", color="grey"))+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="")+
transition_states(Date, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out')+
NULL
install.packages("gifski")
library(lubridate)
library(gifski)
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal()+
theme(legend.position="none")+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=6, hjust=0.5, face="italic", color="grey70"))+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="", x="")+
transition_states(Date, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out')+
NULL
animate(anim, 100, fps = 10,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal(size=16)+
theme(legend.position="none")+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=8, hjust=0.5, face="italic", color="grey70"))+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="", x="")+
transition_states(Date, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out')+
NULL
animate(anim, 100, fps = 10,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_classic(base_size = 16)+
theme(legend.position="none")+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=8, hjust=0.5, face="italic", color="grey70"))+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="", x="")+
transition_states(Date, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out')+
NULL
animate(anim, 100, fps = 10,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal(base_size = 16)+
theme(legend.position="none")+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=10, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=25, hjust=-1, face="bold", colour="grey20"))+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="", x="")
anim
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal(base_size = 16)+
theme(legend.position="none")+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=10, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=25, face="bold", colour="grey20"))+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="", x="")
anim
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal(base_size = 16)+
theme(legend.position="none")+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=10, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=25, face="bold", colour="grey20"))+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="", x="")+
transition_states(Date, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out')+
NULL
animate(anim, 100, fps = 10,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal(base_size = 16)+
theme(legend.position="none", axis.text=element_blank())+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=10, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=25, face="bold", colour="grey20"), plot.title.position = "plot")+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="", x="")
anim
animate(anim, 100, fps = 10,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal(base_size = 16)+
theme(legend.position="none", axis.text.x=element_blank())+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=10, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=25, face="bold", colour="grey20"), plot.title.position = "plot")+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="", x="")+
transition_states(Date, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out')+
NULL
animate(anim, 100, fps = 10,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal(base_size = 16)+
theme(legend.position="none", axis.text.y=element_blank())+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=10, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=25, face="bold", colour="grey20"), plot.title.position = "panel")+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="", x="")
anim
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal(base_size = 16)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(legend.position="none", axis.text.y=element_blank())+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=10, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=25, face="bold", colour="grey20"), plot.title.position = "panel")+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="", x="")+
transition_states(Date, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out')+
NULL
animate(anim, 100, fps = 10,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal(base_size = 32)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(legend.position="none", axis.text.y=element_blank())+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=16, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=25, face="bold", colour="grey40"), plot.title.position = "panel")+
labs(title = 'Number of cases: {closest_state}', caption  = jhu_url, y="", x="Cases")+
transition_states(Date, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out')+
NULL
animate(anim, 100, fps = 10,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
library(tidyverse)
library(ggrepel)
library(gganimate)
library(lubridate)
library(gifski)
#This number defines the number of cases
cutoff <- 100
#Adapted from: https://rviews.rstudio.com/2020/03/05/covid-19-epidemiology-with-r/
jhu_url <- paste("https://raw.githubusercontent.com/CSSEGISandData/",
"COVID-19/master/csse_covid_19_data/", "csse_covid_19_time_series/",
"time_series_19-covid-Confirmed.csv", sep = "")
df <- read.csv(jhu_url,check.names=FALSE)
df_long <- df %>% rename(province = "Province/State", country_region = "Country/Region") %>%
pivot_longer(-c(province, country_region, Lat, Long), names_to = "Date", values_to = "cumulative_cases")
# Change data format, sort by data, remove cruise ship data
df_cum <- df_long %>% mutate(Date = mdy(Date) ) %>%
#  filter(country_region == "US") %>%
arrange(province, Date) %>%
ungroup() %>% filter(str_detect(province, "Diamond Princess", negate = TRUE))
# %>% select(-c(country_region, Lat, Long, cumulative_cases))
#Collapse province data into data per country/region
df_cum <- df_cum %>% group_by(country_region,Date) %>%
summarise(cumulative_cases=sum(cumulative_cases)) %>% ungroup()
#Calculate incidents per day
df_cum <- df_cum %>% group_by(country_region) %>% mutate(incident_cases = c(0, diff(cumulative_cases))) %>% ungroup()
#Rename several countries for compatibility with the population data
df_cum <- df_cum %>%
mutate(country_region = recode(country_region,
'Taiwan*' = "Taiwan",
Czechia = "Czech Republic",
US = "United States",
'Korea, South' = "South Korea")
)
#Read population data, source: https://worldpopulationreview.com
df_pop <- read.csv("pop_data.csv") %>% select('name','pop2020') %>% rename(country_region="name")
#Add population data
df_cum <- left_join(df_cum,df_pop, by="country_region")
#Calculate cases per 10,000 inhabitants
df_cum <- df_cum %>% mutate(cases_per_10k = cumulative_cases/pop2020*10)
#Generate a dataframe that synchronizes data by 'date of onset', defined by cutoff
df_sync <- df_cum %>% filter(cases_per_10k >= 0.01) %>%  group_by(country_region) %>%
mutate(days_after_onset = row_number()) %>% ungroup()
#Optional: save the dataframe in CSV format
# write.csv(df_sync,"COVID.csv")
#Optional select a number of countries
countries_of_europe <- read.csv("countries_of_europe.csv", header = FALSE) %>% unlist(use.names = FALSE)
#Plot number of cases per 10,000 inhabitants versus date of onset
# df_sync %>%
#   filter(country_region %in% countries_of_europe) %>%
# ggplot(aes(days_after_onset,cases_per_10k,color=country_region))+geom_line(size=1, alpha=.8) +geom_point()+
#   #Log-scale
#   scale_y_log10() +
#   #add_labels
#   geom_text(aes(x = days_after_onset, y=cases_per_10k, label = country_region, color = country_region),
#                    hjust = 1,alpha=0.8,
# #                  direction    = "y",
#                     nudge_x = -0.05,nudge_y = 0.05,
# #                   fontface = 'bold',
# #                 fill = 'white',
#                     size=5) +
#   theme_classic(base_size = 16) +
#
#   #This is where the magic happens
#   transition_reveal(days_after_onset) +
#   #Remove Legend
#   theme(legend.position="none") +
#   view_follow(fixed_y = F,fixed_x = T) +
#   NULL
#Plot number of cases per 10,000 inhabitants versus date
# df_cum %>%  filter(country_region %in% countries_of_europe) %>%
#   ggplot(aes(Date,cases_per_10k,color=country_region))+geom_line(size=2) + coord_cartesian(xlim = c(mdy("02-20-2020"),NA))+
#   #add_labels
#   geom_label(aes(x = Date, y=cases_per_10k, label = country_region, color = country_region),
#                      hjust = 1,
#              # nudge_x = 5,
#                    #                   fontface = 'bold',
#                    fill = 'white',
#              size=5) +
#
#   theme_classic(base_size = 16) +
#   theme(plot.margin = margin(5.5, 5.5, 5.5, 5.5))+
#
#   #This is where the magic happens
#   transition_reveal(Date) +
#   #Remove Legend
#   theme(legend.position="none") +
#   view_follow(fixed_y = FALSE, fixed_x = TRUE) +
#   NULL
#Plot number of total cases versus date
# df_cum %>%  filter(country_region %in% countries_of_europe) %>%
#   ggplot(aes(Date,cumulative_cases,color=country_region))+geom_line(size=2) + coord_cartesian(xlim = c(mdy("02-20-2020"),NA))+
#   #add_labels
#   geom_text(aes(x = Date, y=cumulative_cases, label = country_region, color = country_region),
#             hjust = 1,alpha=0.8,
#             #                  direction    = "y",
#             nudge_x = -0.05,nudge_y = 0.05,
#             #                   fontface = 'bold',
#             #                 fill = 'white',
#             size=5) +
#   theme_classic(base_size = 16) +
#   theme(plot.margin = margin(5.5, 5.5, 5.5, 5.5))+
#
#   #This is where the magic happens
#   transition_reveal(Date) +
#   #Remove Legend
#   theme(legend.position="none") +
#   view_follow(fixed_y = F,fixed_x = T) +
#   NULL
df_cum_eu <- df_cum %>% filter(country_region %in% countries_of_europe)
df_cum_ranked <-  df_cum_eu %>% filter(Date > "2020-03-01") %>%
group_by(Date)%>%
mutate(rank = rank(-cumulative_cases),
Value_rel = cumulative_cases/cumulative_cases[rank==1],
Value_lbl = paste0(" ",cumulative_cases)) %>%
group_by(country_region) %>%
filter(rank <= 16)
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_basic(base_size = 32)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(legend.position="none", axis.text.y=element_blank())+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=16, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=40, face="bold", colour="grey40"), plot.title.position = "panel")+
labs(title = 'Number of confirmed cases on: {closest_state}', caption  = jhu_url, y="Cases", x="")+
transition_states(Date, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out')+
NULL
animate(anim, 100, fps = 10,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_light(base_size = 32)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(legend.position="none", axis.text.y=element_blank())+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=16, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=40, face="bold", colour="grey40"), plot.title.position = "panel")+
labs(title = 'Number of confirmed cases on: {closest_state}', caption  = jhu_url, y="Cases", x="")
anim
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_light(base_size = 32)+
#Remove grid
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#Remove upper and right axis
theme(panel.border = element_blank()) +
theme(axis.line.x  = element_line(colour = "black"), axis.line.y  = element_line(colour = "black"))+
theme(legend.position="none", axis.text.y=element_blank())+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=16, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=40, face="bold", colour="grey40"), plot.title.position = "panel")+
labs(title = 'Number of confirmed cases on: {closest_state}', caption  = jhu_url, y="Cases", x="")
anim
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_light(base_size = 32)+
#Remove grid
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#Remove upper, left and right axis
theme(panel.border = element_blank()) +
theme(axis.line.x  = element_line(colour = "grey20"))+
theme(legend.position="none", axis.text.y=element_blank())+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=16, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=40, face="bold", colour="grey40"), plot.title.position = "panel")+
labs(title = 'Number of confirmed cases on: {closest_state}', caption  = jhu_url, y="Cases", x="")
anim
anim <- ggplot(df_cum_ranked, aes(rank, group = country_region, fill = as.factor(country_region), color = as.factor(country_region)))+
geom_tile(aes(y = cumulative_cases/2,
height = cumulative_cases,
width = 0.8), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(country_region, " ")), vjust = 0.2, hjust = 1, size = 7) + #determine size of the label
geom_text(aes(y=cumulative_cases,label = Value_lbl, hjust=0),size = 8 ) +  #determine size of the value label
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_light(base_size = 32)+
#Remove grid
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#Remove upper, left and right axis
theme(panel.border = element_blank()) +
theme(axis.line.x  = element_line(colour = "grey"))+
theme(legend.position="none", axis.text.y=element_blank())+
theme(plot.margin = margin(1,4, 1, 4, "cm")) +
theme(plot.caption=element_text(size=16, hjust=0.5, face="italic", color="grey20"))+
theme(plot.title=element_text(size=40, face="bold", colour="grey40"), plot.title.position = "panel")+
labs(title = 'Number of confirmed cases on: {closest_state}', caption  = jhu_url, y="Cases", x="")
anim
